{"version":3,"sources":["components/Tile/OccupiedTile.jsx","components/Tile/TileWrapper.jsx","components/Board.jsx","components/Tile/ToolbarTile.jsx","components/Toolbar.jsx","helpers/generatePreview.js","components/App.jsx","index.js"],"names":["tileSource","beginDrag","props","Object","objectSpread","tileCoordinates","tile","endDrag","monitor","component","didDrop","getDropResult","boxIndex","col","rowIndex","row","handleBoxClear","canDrag","locked","OccupiedTile","_this$props","this","boxSide","isDragging","connectDragSource","hovered","react_default","a","createElement","className","concat","style","position","cursor","top","src","content","alt","left","border","width","height","display","justifyContent","alignItems","backgroundColor","opacity","color","fontSize","React","Component","DragSource","connect","connectDragPreview","dragPreview","dragSource","DropTarget","drop","connectDropTarget","dropTarget","getItem","isOver","dragToDelete","value","tiles","heigth","Tile_OccupiedTile","Board","_ref","boardWidth","boardHeight","boxMatrix","boardRef","nrOfBoxesWide","Math","floor","nrOfBoxesHigh","ref","gridTemplateColumns","gridTemplateRows","map","box","Tile_TileWrapper","key","ToolbarTile","marginBottom","padding","handleTileDrop","Toolbar","setBoxSide","background","setBackground","toggleLocked","_useState","useState","_useState2","slicedToArray","isExpanded","toggleIsExpanded","_useState3","_useState4","displayRight","toggleDisplayRight","right","transform","onClick","margin","name","id","onChange","e","target","disabled","tileIndex","Tile_ToolbarTile","tileContent","tileTarget","lib_default","labels","50","100","150","min","max","step","orientation","paddingLeft","marginTop","generatePreview","itemType","item","HTML5toTouch","backends","backend","HTML5Backend","TouchBackend","options","enableMouseEvents","preview","transition","TouchTransition","boardMargin","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","updatedBoxSide","setState","updateBoxMatrix","updatedBackground","updateBoardSize","_this$boardRef$curren","current","clientHeight","clientWidth","length","createBoxMatrix","_this$state","newBoxMatrix","i","push","Array","fill","_this$state2","newMatrix","toConsumableArray","boxesWideDiff","forEach","boxesHighDiff","updatedValue","indexOf","find","createRef","window","addEventListener","_this2","_this$state3","DndProvider","MultiBackend","backgroundImage","components_Toolbar","components_Board","react_dnd_multi_backend_dist_esm","generator","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.13fc9960.chunk.js","sourcesContent":["import React from \"react\";\nimport { DragSource } from \"react-dnd\";\n\nconst tileSource = {\n  beginDrag(props) {\n    return { tileCoordinates: props.tileCoordinates, ...props.tile };\n  },\n  endDrag(props, monitor, component) {\n    // Delete if content dragged and dropped outside of it's box\n    if (monitor.didDrop()) {\n      if (\n        monitor.getDropResult().boxIndex !== props.tileCoordinates.col ||\n        monitor.getDropResult().rowIndex !== props.tileCoordinates.row\n      ) {\n        // Dropped in other box - delete\n        return props.handleBoxClear(\n          props.tileCoordinates.row,\n          props.tileCoordinates.col\n        );\n      } else {\n        // Dropped back in same box - keep\n        return null;\n      }\n    } else {\n      // Dropped outside of board - delete\n      return props.handleBoxClear(\n        props.tileCoordinates.row,\n        props.tileCoordinates.col\n      );\n    }\n  },\n  canDrag(props, monitor) {\n    if (props.locked) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragPreview: connect.dragPreview(),\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nclass OccupiedTile extends React.Component {\n  render() {\n    const {\n      tile,\n      boxSide,\n      isDragging,\n      connectDragSource,\n      hovered,\n      locked\n    } = this.props;\n    return connectDragSource(\n      <div\n        className={`${\n          !isDragging && !locked ? \"occupied-tile__wrapper--highlight\" : \"\"\n        }`}\n        style={{\n          position: \"relative\",\n          cursor: locked ? \"auto\" : \"grab\"\n        }}\n      >\n        <img\n          className=\"grid__box--image\"\n          style={{ position: \"relative\", top: \"2px\" }}\n          src={`./tiles/${tile.content}.png`}\n          alt=\"Tile\"\n        />\n        <div\n          className=\"occupied-tile__editframe\"\n          style={{\n            position: \"absolute\",\n            top: \"-2px\",\n            left: \"-4px\",\n            border: \"4px solid yellow\",\n            width: `${boxSide - 4}px `,\n            height: `${boxSide - 4}px`\n          }}\n        />\n        {isDragging && (\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"2px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              backgroundColor: `${hovered ? \"yellow\" : \"red\"}`,\n              opacity: \"0.5\",\n              width: `${boxSide - 4}px `,\n              height: `${boxSide - 4}px`\n            }}\n          >\n            {!hovered && (\n              <i\n                className=\"fas fa-minus\"\n                style={{\n                  color: \"white\",\n                  fontSize: `${boxSide / 2}px`\n                }}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DragSource(\"tile\", tileSource, collect)(OccupiedTile);\n","import React from \"react\";\nimport { DropTarget } from \"react-dnd\";\nimport OccupiedTile from \"./OccupiedTile\";\n\n// TILE AS DROP TARGET FOR CREATE\nconst tileTarget = {\n  drop(props, monitor, component) {\n    return {\n      rowIndex: props.rowIndex,\n      boxIndex: props.boxIndex\n    };\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    tile: monitor.getItem(),\n    hovered: monitor.isOver(),\n    dragToDelete: monitor.getItem() && !!monitor.getItem().tileCoordinates\n  };\n}\n\nconst TileWrapper = props => {\n  const {\n    rowIndex,\n    boxIndex,\n    boxSide,\n    value,\n    handleBoxClear,\n    tiles,\n    locked\n  } = props;\n  const { connectDropTarget, hovered, dragToDelete } = props;\n  const backgroundColor = hovered && !dragToDelete ? \"lightgreen\" : \"\";\n  const tileCoordinates = { row: rowIndex, col: boxIndex };\n  return connectDropTarget(\n    <div\n      className=\"grid__box\"\n      style={{\n        width: `${boxSide}px`,\n        heigth: `${boxSide}px`,\n        backgroundColor: `${backgroundColor}`,\n        opacity: hovered && !dragToDelete ? \"0.6\" : \"1\"\n      }}\n    >\n      {hovered && !dragToDelete && (\n        <i\n          className=\"fas fa-plus\"\n          style={{ fontSize: `${boxSide / 2}px`, position: \"absolute\" }}\n        />\n      )}\n      {value > 0 && (\n        <OccupiedTile\n          tile={tiles[value]}\n          boxSide={boxSide}\n          tileCoordinates={tileCoordinates}\n          handleBoxClear={handleBoxClear}\n          dragToDelete={dragToDelete}\n          hovered={hovered}\n          locked={locked}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default DropTarget(\"tile\", tileTarget, collect)(TileWrapper);\n","import React from \"react\";\nimport TileWrapper from \"./Tile/TileWrapper\";\n\nconst Board = ({\n  boxSide,\n  boardWidth,\n  boardHeight,\n  boxMatrix,\n  tiles,\n  boardRef,\n  handleBoxClear,\n  locked\n}) => {\n  const nrOfBoxesWide = Math.floor(boardWidth / boxSide);\n  const nrOfBoxesHigh = Math.floor(boardHeight / boxSide);\n\n  return (\n    <div className=\"gridWrapper\" ref={boardRef}>\n      <div\n        className=\"grid\"\n        style={{\n          width: nrOfBoxesWide * boxSide,\n          height: nrOfBoxesHigh * boxSide,\n          gridTemplateColumns: `repeat(auto-fill, ${boxSide}px)`,\n          gridTemplateRows: `repeat(auto-fill, ${boxSide}px)`\n        }}\n      >\n        {boxMatrix.map((row, rowIndex) => {\n          if (rowIndex < nrOfBoxesHigh) {\n            return row.map((box, boxIndex) => {\n              if (boxIndex < nrOfBoxesWide) {\n                return (\n                  <TileWrapper\n                    rowIndex={rowIndex}\n                    boxIndex={boxIndex}\n                    boxSide={boxSide}\n                    value={box}\n                    tiles={tiles}\n                    key={boxIndex}\n                    handleBoxClear={(rowIndex, boxIndex) =>\n                      handleBoxClear(rowIndex, boxIndex)\n                    }\n                    locked={locked}\n                  />\n                );\n              } else {\n                return null;\n              }\n            });\n          } else {\n            return null;\n          }\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\nimport { DragSource } from \"react-dnd\";\n\nconst tileSource = {\n  beginDrag(props) {\n    return props.tile;\n  },\n  endDrag(props, monitor, component) {\n    if (!monitor.didDrop()) {\n      return;\n    }\n    return props.handleTileDrop(props.tile.content, monitor.getDropResult());\n  },\n  canDrag(props, monitor) {\n    if (props.locked) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nclass ToolbarTile extends React.Component {\n  render() {\n    const { isDragging, connectDragSource, tile, locked } = this.props;\n    const opacity = isDragging ? 0.5 : 1;\n\n    return connectDragSource(\n      <div style={{ marginBottom: `10px` }}>\n        <div\n          className=\"grid-box\"\n          style={{\n            border: `2px solid #666666`,\n            padding: `0`,\n            width: `75px`,\n            height: `75px`,\n            cursor: \"grab\",\n            opacity: locked ? \"0.5\" : \"1\"\n          }}\n        >\n          <img\n            style={{ opacity: `${opacity}` }}\n            className=\"grid__box--image\"\n            src={`./tiles/${tile.content}.png`}\n            alt=\"Tile\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DragSource(\"tile\", tileSource, collect)(ToolbarTile);\n","import React, { useState } from \"react\";\nimport Slider from \"react-rangeslider\";\nimport ToolbarTile from \"./Tile/ToolbarTile\";\nimport \"react-rangeslider/lib/index.css\";\n\nconst Toolbar = ({\n  boxSide,\n  setBoxSide,\n  background,\n  setBackground,\n  tiles,\n  handleTileDrop,\n  locked,\n  toggleLocked\n}) => {\n  const [isExpanded, toggleIsExpanded] = useState(true);\n  const [displayRight, toggleDisplayRight] = useState(true);\n  return (\n    <div\n      className=\"toolbar__wrapper\"\n      style={{\n        right: `${displayRight ? \"0\" : \"calc(100vw - var(--toolbar-width))\"}`\n      }}\n    >\n      <div>\n        <button\n          className=\"toolbar__toggle\"\n          style={\n            displayRight\n              ? {\n                  right: \"20px\",\n                  backgroundColor: `${\n                    isExpanded ? \"var(--primary-color)\" : \"black\"\n                  }`,\n                  transform: `${isExpanded ? \"scale(1.3)\" : \"\"}`\n                }\n              : {\n                  left: \"20px\",\n                  backgroundColor: `${\n                    isExpanded ? \"var(--primary-color)\" : \"black\"\n                  }`,\n                  transform: `${isExpanded ? \"scale(1.3)\" : \"\"}`\n                }\n          }\n          onClick={() => toggleIsExpanded(!isExpanded)}\n        >\n          <i className={isExpanded ? \"fa fa-times\" : \"fab fa-fort-awesome\"} />\n        </button>\n        {isExpanded && (\n          <button\n            className=\"toolbar__toggle\"\n            style={\n              displayRight\n                ? {\n                    left: \"20px\",\n                    backgroundColor: `${isExpanded ? \"#2e90db\" : \"black\"}`,\n                    transform: `${isExpanded ? \"scale(1.3)\" : \"\"}`\n                  }\n                : {\n                    right: \"20px\",\n                    backgroundColor: `${isExpanded ? \"#2e90db\" : \"black\"}`,\n                    transform: `${isExpanded ? \"scale(1.3)\" : \"\"}`\n                  }\n            }\n            onClick={() => toggleDisplayRight(!displayRight)}\n          >\n            <i className={`fa fa-arrow-${displayRight ? \"left\" : \"right\"}`} />\n          </button>\n        )}\n      </div>\n      <div className={`toolbar ${isExpanded ? \"\" : \"toolbar--collapsed\"}`}>\n        <select\n          style={{\n            display: \"inline-block\",\n            width: \"164px\",\n            margin: \"0px 20px 20px 20px\",\n            opacity: locked ? \"0.7\" : \"1\"\n          }}\n          className=\"toolbar__custom-select\"\n          name=\"backgroundSelect\"\n          id=\"backgroundSelect\"\n          value={background}\n          onChange={e => setBackground(e.target.value)}\n        >\n          <option value=\"grass\" disabled={locked}>\n            ☘ MEADOW\n          </option>\n          <option value=\"forest\" disabled={locked}>\n            🌲 FOREST\n          </option>\n          <option value=\"desert\" disabled={locked}>\n            🏜 DESERT\n          </option>\n          <option value=\"water\" disabled={locked}>\n            🌊 OCEAN\n          </option>\n        </select>\n        <div className=\"toolbar__tiles\">\n          {tiles.map((tile, tileIndex) => {\n            if (tileIndex !== 0) {\n              return (\n                <ToolbarTile\n                  key={tileIndex}\n                  tile={tile}\n                  boxSide={boxSide}\n                  locked={locked}\n                  handleTileDrop={(tileContent, tileTarget) =>\n                    handleTileDrop(tileContent, tileTarget)\n                  }\n                />\n              );\n            } else {\n              return undefined;\n            }\n          })}\n        </div>\n        <div\n          className=\"toolbar__slider--wrapper\"\n          style={{ opacity: locked ? \"0.7\" : \"1\" }}\n        >\n          <Slider\n            labels={{ 50: \"S\", 100: \"M\", 150: \"L\" }}\n            className=\"toolbar__slider\"\n            min={50}\n            max={150}\n            step={5}\n            orientation=\"vertical\"\n            value={boxSide}\n            onChange={value => {\n              !locked && setBoxSide(value);\n            }}\n          />\n        </div>\n        <button\n          className={`toolbar__lock-button ${\n            locked ? \"toolbar__lock-button--locked\" : \"\"\n          }`}\n          onClick={toggleLocked}\n          style={{\n            backgroundColor: `${\n              locked ? \"var(--warning-color)\" : \"var(--primary-color)\"\n            }`\n          }}\n        >\n          <i\n            className={`fa fa-${locked ? \"lock\" : \"lock-open\"}`}\n            style={{\n              paddingLeft: `${locked ? \"0\" : \"7.5px\"}`\n            }}\n          />\n          <div\n            style={{\n              fontSize: \"10px\",\n              marginTop: \"4px\"\n            }}\n          />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import React from \"react\";\n\nconst generatePreview = ({ itemType, item, style, boxSide }) => {\n  return (\n    <div style={style}>\n      <div className=\"grid-box\">\n        <img\n          style={{\n            width: boxSide,\n            height: boxSide,\n            opacity: \"0.6\"\n          }}\n          src={`./tiles/${item.content}.png`}\n          alt=\"Tile\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default generatePreview;\n","import React from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport TouchBackend from \"react-dnd-touch-backend\";\nimport MultiBackend, {\n  TouchTransition,\n  Preview\n} from \"react-dnd-multi-backend\";\nimport Board from \"./Board\";\nimport Toolbar from \"./Toolbar\";\nimport generatePreview from \"../helpers/generatePreview\";\n\nconst HTML5toTouch = {\n  backends: [\n    {\n      backend: HTML5Backend\n    },\n    {\n      backend: TouchBackend,\n      options: { enableMouseEvents: true },\n      preview: true,\n      transition: TouchTransition\n    }\n  ]\n};\n\nconst boardMargin = 20;\nconst tiles = [\n  { content: \"\" },\n  { content: \"water-sq\" },\n  { content: \"lava-sq\" },\n  { content: \"stone-sq\" },\n  { content: \"cryptic-sq\" },\n  { content: \"stairs\" },\n  { content: \"barrel\" },\n  { content: \"tree-1\" },\n  { content: \"tree-2\" },\n  { content: \"rock-1\" },\n  { content: \"rock-2\" }\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.boardRef = React.createRef();\n  }\n\n  state = {\n    boxSide: 100,\n    boardHeight: 0,\n    boardWidth: 0,\n    boxMatrix: [],\n    background: \"grass\",\n    locked: false\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateBoardSize);\n    this.updateBoardSize();\n  }\n\n  setBoxSide = updatedBoxSide => {\n    this.setState(\n      {\n        boxSide: updatedBoxSide\n      },\n      () => this.updateBoxMatrix()\n    );\n  };\n\n  setBackground = updatedBackground => {\n    this.setState({\n      background: updatedBackground\n    });\n  };\n\n  updateBoardSize = () => {\n    const { clientHeight, clientWidth } = this.boardRef.current;\n    this.setState(\n      {\n        boardWidth: clientWidth - boardMargin,\n        boardHeight: clientHeight - boardMargin\n      },\n      () => {\n        if (this.state.boxMatrix.length === 0) {\n          this.createBoxMatrix();\n        } else {\n          this.updateBoxMatrix();\n        }\n      }\n    );\n  };\n\n  createBoxMatrix = () => {\n    const { boardWidth, boardHeight, boxSide } = this.state;\n    const nrOfBoxesWide = Math.floor(boardWidth / boxSide);\n    const nrOfBoxesHigh = Math.floor(boardHeight / boxSide);\n\n    let newBoxMatrix = [];\n    for (let i = 0; i < nrOfBoxesHigh; i++) {\n      newBoxMatrix.push(new Array(nrOfBoxesWide).fill(0));\n    }\n    this.setState({ boxMatrix: newBoxMatrix });\n  };\n\n  updateBoxMatrix = () => {\n    const { boardWidth, boardHeight, boxMatrix, boxSide } = this.state;\n    const nrOfBoxesWide = Math.floor(boardWidth / boxSide);\n    const nrOfBoxesHigh = Math.floor(boardHeight / boxSide);\n    const newMatrix = [...boxMatrix];\n\n    // Push another box to each row if board is too wide\n    if (nrOfBoxesWide > newMatrix[0].length) {\n      // calcs diff after resize, pushing one tile at the time is to slow for a fast resize\n      const boxesWideDiff = nrOfBoxesWide - newMatrix[0].length;\n      for (let i = 0; i < boxesWideDiff; i++) {\n        newMatrix.forEach(row => {\n          row.push(0);\n        });\n      }\n    }\n    // Push row onto Matrix if board is too tall\n    if (nrOfBoxesHigh > newMatrix.length) {\n      const boxesHighDiff = nrOfBoxesHigh - newMatrix.length;\n      for (let i = 0; i < boxesHighDiff; i++) {\n        newMatrix.push(new Array(newMatrix[0].length).fill(0));\n      }\n    }\n    this.setState({ boxMatrix: newMatrix });\n  };\n\n  handleBoxClear = (rowIndex, boxIndex) => {\n    const newMatrix = [...this.state.boxMatrix];\n    newMatrix[rowIndex][boxIndex] = 0;\n    this.setState({ boxMatrix: newMatrix });\n  };\n\n  handleTileDrop = (tileContent, tileTarget) => {\n    let newMatrix = [...this.state.boxMatrix];\n    let updatedValue = tiles.indexOf(\n      tiles.find(tile => tile.content === tileContent)\n    );\n    if (!updatedValue > 0) updatedValue = 0;\n    newMatrix[tileTarget.rowIndex][tileTarget.boxIndex] = updatedValue;\n    this.setState({ boxMatrix: newMatrix });\n  };\n\n  // TODO - handleDeleteDrop\n\n  toggleLocked = () => {\n    this.setState({ locked: !this.state.locked });\n  };\n\n  render() {\n    const {\n      boxSide,\n      boardWidth,\n      boardHeight,\n      boxMatrix,\n      background,\n      locked\n    } = this.state;\n\n    const generatePreviewWrapper = props => {\n      return generatePreview({ ...props, boxSide });\n    };\n\n    return (\n      <DndProvider backend={MultiBackend} options={HTML5toTouch}>\n        <div\n          className=\"mainWrapper\"\n          style={{\n            backgroundImage: `url(./bg/${background}.jpeg)`\n          }}\n        >\n          <Toolbar\n            boxSide={this.state.boxSide}\n            setBoxSide={updatedBoxSide => this.setBoxSide(updatedBoxSide)}\n            background={background}\n            setBackground={updatedBackground =>\n              this.setBackground(updatedBackground)\n            }\n            tiles={tiles}\n            handleTileDrop={(tileContent, tileTarget) =>\n              this.handleTileDrop(tileContent, tileTarget)\n            }\n            locked={locked}\n            toggleLocked={this.toggleLocked}\n          />\n          <Board\n            boardRef={this.boardRef}\n            boxSide={boxSide}\n            boardWidth={boardWidth}\n            boardHeight={boardHeight}\n            boxMatrix={boxMatrix}\n            tiles={tiles}\n            handleBoxClear={(rowIndex, boxIndex) =>\n              this.handleBoxClear(rowIndex, boxIndex)\n            }\n            locked={locked}\n          />\n        </div>\n        <Preview generator={generatePreviewWrapper} />\n      </DndProvider>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}